<style lang="less">
  @import "../styles/base";

  .van-tabs__line {
    background-color: @themeColor !important;
  }

  .panels-wrapper {
    .panel-img {
      width: 100%;
    }
    .van-cell__value {
      color: @themeColor;
    }
  }

  .FAB {
    van-icon {
      position: fixed;
      right: 30rpx;
      bottom: 40rpx;
      color: #fff;
      font-size: 100rpx;
      background: @themeColor;
      border-radius:50%;
      box-shadow: 0 0 6px #aaa;
      .van-icon {
        display: block;
      }
    }
  }
</style>
<template>
  <view>
    <van-tabs
      active="{{ active  }}"
      @change="changeTab"
    >
      <van-tab
        wx:for="{{cats}}"
        wx:key="{{index}}"
        title="{{item}}"
      ></van-tab>
    </van-tabs>

    <view class="panels-wrapper">
      <van-panel
        custom-class="panel"
        wx:for="{{cats[active] === 'All' ? panels : cleanPanels[cats[active]]}}"
        wx:key="{{item._id}}"
        id="{{item._id}}"
        title="{{item.title}}"
        desc="{{item.place}}"
        status="{{item.date}}"
        @tap="seeDetail"
      >
        <view>
          <!--<view>{{item.cat}}</view>-->
          <image src="{{item.img}}" class="panel-img"></image>
        </view>
      </van-panel>
      <i-load-more wx:if="{{cats[active] !== 'All' && !cleanPanels[cats[active]].length}}" tip="暂无数据"
                   loading="{{ false }}"></i-load-more>
    </view>

    <view class="FAB">
      <van-icon name="add-o" @tap="report"></van-icon>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { cats } from '../config'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'All Male Panel',
      usingComponents: {
        'van-tab': '../components/vant/tab/index',
        'van-tabs': '../components/vant/tabs/index',
        'van-panel': '../components/vant/panel/index',
        'van-icon': '../components/vant/icon/index',
        'i-load-more': '../components/iview/load-more/index'
      }
    }
    components = {}

    mixins = []

    data = {
      cats: cats,
      active: 0,
      panels: [],
      cleanPanels: {}
    }

    computed = {}

    methods = {
      changeTab(e) {
        this.active = e.detail.index
      },
      report() {
        wx.navigateTo({
          url: '/pages/report'
        })
      },
      seeDetail(e) {
        wx.navigateTo({
          url: '/pages/detail?id=' + e.currentTarget.id
        })
      }
    }

    events = {}

    onLoad() {
      const self = this
      this.$parent.getPanelsData().then(res => {
        self.panels = res
        self.$parent.globalData.panels = res
        self.cleanPanels = self.$parent.clearPanelsData(res)
        self.$apply()
      })
    }
  }
</script>
